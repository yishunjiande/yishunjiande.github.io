<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Mac上使用Hexo+github搭建个人博客</title>
    <url>/2018/12/16/hello_my_blog/</url>
    <content><![CDATA[<p>通过google查问题的时候，看到一些博客风格很简约，博客内容质量很好，不由觉得想要拥有，得知这样的博客都是通过hexo+github搭建的，都是开源免费的，那必须得自己搞一个了，话不多说，开搞！</p>
<span id="more"></span>

<h2 id="1-基础认识"><a href="#1-基础认识" class="headerlink" title="1. 基础认识"></a>1. 基础认识</h2><h3 id="1-1-先来一张预览图尝鲜"><a href="#1-1-先来一张预览图尝鲜" class="headerlink" title="1.1 先来一张预览图尝鲜"></a>1.1 先来一张预览图尝鲜</h3><p><img src="https://cdn.jsdelivr.net/gh/yishunjiande/PictureContainer@main/img/20210529215609.png" alt="blog预览图"><br>或者访问<code>https://kt-learn.cn/</code>网址查看，我知道你懒，给个传送门：<a href="https://kt-learn.cn/">go</a></p>
<h3 id="1-2-Hexo相关介绍"><a href="#1-2-Hexo相关介绍" class="headerlink" title="1.2 Hexo相关介绍"></a>1.2 Hexo相关介绍</h3><blockquote>
<p>来源于Hexo官方  </p>
</blockquote>
<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<h3 id="1-3-系统环境"><a href="#1-3-系统环境" class="headerlink" title="1.3 系统环境"></a>1.3 系统环境</h3><p>MacOs BigSur 11.3.1</p>
<h2 id="2-安装Hexo"><a href="#2-安装Hexo" class="headerlink" title="2. 安装Hexo"></a>2. 安装Hexo</h2><p>希望你已经安装了HomeBrew，相信用Mac电脑的人都有吧，没有请安装一个，参考：<a href="https://www.cnblogs.com/haojile/p/13193805.html">Mac安装Homebrew</a></p>
<h3 id="2-1-安装git"><a href="#2-1-安装git" class="headerlink" title="2.1 安装git"></a>2.1 安装git</h3><p>如果已经安装请忽略这步。<br>安装git命令（brew命令可用必须是已经安装了HomeBrew）：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">brew install git</span><br></pre></td></tr></table></figure>
<p>或者参考：<a href="https://git-scm.com/book/zh/v2/%E8%B5%B7%E6%AD%A5-%E5%AE%89%E8%A3%85-Git">1.5 起步 - 安装 Git</a><br>验证git是否安装成功：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">➜ git --version</span><br><span class="line">git version 2.30.1 (Apple Git-130)</span><br></pre></td></tr></table></figure>
<h3 id="2-2-安装node"><a href="#2-2-安装node" class="headerlink" title="2.2 安装node"></a>2.2 安装node</h3><p>如果已经安装请忽略这步。<br>安装node命令：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">brew install node</span><br></pre></td></tr></table></figure>
<p>验证node安装成功：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">➜ node -v</span><br><span class="line">v16.2.0</span><br><span class="line">➜ npm -v</span><br><span class="line">7.13.0</span><br></pre></td></tr></table></figure>
<h3 id="2-3-安装hexo"><a href="#2-3-安装hexo" class="headerlink" title="2.3 安装hexo"></a>2.3 安装hexo</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> npm install hexo-cli -g</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> npm install hexo-deployer-git --save</span></span><br></pre></td></tr></table></figure>
<p>验证hexo安装成功：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">➜ hexo -v</span><br><span class="line">INFO  Validating config</span><br><span class="line">hexo: 5.4.0</span><br><span class="line">hexo-cli: 4.2.0</span><br></pre></td></tr></table></figure>
<h3 id="2-4-开始搭建博客"><a href="#2-4-开始搭建博客" class="headerlink" title="2.4 开始搭建博客"></a>2.4 开始搭建博客</h3><p>至1.3就已经安装好Hexo了，现在开始开始自己的博客搭建。<br>创建本地博客目录：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">➜ mkdir blog</span><br><span class="line">➜ cd blog</span><br></pre></td></tr></table></figure>
<p>执行hexo init(当前是blog目录):</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">➜ hexo init</span><br></pre></td></tr></table></figure>
<p>生成静态网页并本地部署：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">➜ hexo g//这是hexo generate的简写，本文全部使用简写</span><br><span class="line">➜ hexo s</span><br><span class="line">INFO  Validating config</span><br><span class="line">INFO  Start processing</span><br><span class="line">INFO  Hexo is running at http://localhost:4000 . Press Ctrl+C to stop.</span><br></pre></td></tr></table></figure>
<p>浏览器打开<code>http://localhost:4000</code>查看，出现如下结果：<br><img src="https://cdn.jsdelivr.net/gh/yishunjiande/PictureContainer@main/img/20210529223342.png" alt="init image"><br>到这里已经搭建好了博客，并且本地是可以访问了，这样还不够酷，将它放到网上，那样任何人都可以查看，cool。</p>
<h2 id="3-将博客部署到Github-Pages上"><a href="#3-将博客部署到Github-Pages上" class="headerlink" title="3. 将博客部署到Github Pages上"></a>3. 将博客部署到Github Pages上</h2><h3 id="3-1-注册-Github-账户"><a href="#3-1-注册-Github-账户" class="headerlink" title="3.1 注册 Github 账户"></a>3.1 注册 Github 账户</h3><p>如果有请忽略。<br><a href="https://github.com/">点击此处</a>访问 Github 官网，点击 Sign Up 注册账户</p>
<h3 id="3-2-创建项目代码库"><a href="#3-2-创建项目代码库" class="headerlink" title="3.2 创建项目代码库"></a>3.2 创建项目代码库</h3><p>点击 New repository 开始创建，步骤及注意事项见图：<br><img src="https://cdn.jsdelivr.net/gh/yishunjiande/PictureContainer@main/img/20210529232141.png" alt="创建repo"></p>
<h3 id="3-3-配置SSH"><a href="#3-3-配置SSH" class="headerlink" title="3.3 配置SSH"></a>3.3 配置SSH</h3><p>如果使用过github等托管服务的话，一般SSH已经配置好了，如果没有请参考：<a href="https://docs.github.com/cn/github/authenticating-to-github/connecting-to-github-with-ssh">使用 SSH 连接到 GitHub</a><br>测试SSH是否配置好：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">➜ ssh -T git@github.com </span><br><span class="line">Hi yishunjiande! You&#x27;ve successfully authenticated, but GitHub does not provide shell access.</span><br></pre></td></tr></table></figure>
<h3 id="3-4-将本地博客与youname-github-io关联"><a href="#3-4-将本地博客与youname-github-io关联" class="headerlink" title="3.4 将本地博客与youname.github.io关联"></a>3.4 将本地博客与youname.github.io关联</h3><p>登录 Github 打开自己的项目 yourname.github.io，复制SSH链接<br><img src="https://cdn.jsdelivr.net/gh/yishunjiande/PictureContainer@main/img/20210529233600.png" alt="ssh url"><br>打开Hexo站点配置文件<code>_config.yml</code><br><img src="https://cdn.jsdelivr.net/gh/yishunjiande/PictureContainer@main/img/20210529233021.png" alt="hexo 目录结构"><br>文件末尾添加如下内容：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> Deployment</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> :号后面空格是必须的，注意下分支是master还是main</span></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># Docs: https://hexo.io/docs/one-command-deployment</span></span></span><br><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repository: git@github.com:yishunjiande/yishunjiande.github.io.git</span><br><span class="line">  branch: main</span><br></pre></td></tr></table></figure>
<h3 id="3-5-将本地博客内容部署到github-pages上"><a href="#3-5-将本地博客内容部署到github-pages上" class="headerlink" title="3.5 将本地博客内容部署到github pages上"></a>3.5 将本地博客内容部署到github pages上</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">➜ hexo g -d</span><br></pre></td></tr></table></figure>
<p>如果出现<code>ERROR Deployer not found: git</code>错误的话，则需安装<code>hexo-deployer-git</code>，执行如下命令：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure>
<p>再次执行<code>hexo g -d</code>命令，如果没有错误，则部署成功，可以去youname.github.io上看一下是不是多了很多文件。<br>在浏览器上输入<code>https://youname.github.io</code>访问你的博客，如果看到内容则成功。</p>
<h3 id="3-6-Hexo常用命令"><a href="#3-6-Hexo常用命令" class="headerlink" title="3.6 Hexo常用命令"></a>3.6 Hexo常用命令</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">//清除缓存</span><br><span class="line">hexo clean </span><br><span class="line">//生成静态网页</span><br><span class="line">hexo g </span><br><span class="line">//本地启动预览查看</span><br><span class="line">hexo s </span><br><span class="line">//本地调试</span><br><span class="line">hexo s --debug</span><br><span class="line">部署到git服务器上：</span><br><span class="line">hexo deploy </span><br><span class="line"></span><br><span class="line">一般修改文章或者配置后先使用hexo s --debug本地看看效果</span><br><span class="line">没问题后直接使用hexo g -d部署到github上</span><br><span class="line"></span><br><span class="line">站点配置文件地址：</span><br><span class="line">~/blog/_config.yml</span><br><span class="line">主题配置文件地址</span><br><span class="line">~/blog/themes/next/_config.yml</span><br></pre></td></tr></table></figure>
<h2 id="4-更换主题"><a href="#4-更换主题" class="headerlink" title="4. 更换主题"></a>4. 更换主题</h2><p>博客搭建好了，那肯定要好好给它美化一下，毕竟Coder都是“颜控”。<br>Hexo支持很多主题，至于你喜欢哪种，可以去<a href="https://hexo.io/themes/">Hexo Theme官方</a>上找你喜欢的，将喜欢的主题clone下来配置就可生效，作者使用的NexT.Pisces，就是你看到的预览图的样式。</p>
<h3 id="4-1-NexT主题搭建"><a href="#4-1-NexT主题搭建" class="headerlink" title="4.1 NexT主题搭建"></a>4.1 NexT主题搭建</h3><p>关于NexT主题搭建，官方有详细的文档：<a href="https://theme-next.iissnan.com/">NexT</a><br>相信聪明的你对着官方文档操作一定能成功。<br>issue：NexT主题部署后乱码<br><img src="https://cdn.jsdelivr.net/gh/yishunjiande/PictureContainer@main/img/20210527003120.png" alt="issue"><br>原因是hexo在5.0之后把swig给删除了需要自己手动安装<br>解决：安装swig<br>输入如下命令：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">➜ npm i hexo-renderer-swig</span><br></pre></td></tr></table></figure>
<h3 id="4-2-主题优化"><a href="#4-2-主题优化" class="headerlink" title="4.2 主题优化"></a>4.2 主题优化</h3><p>NexT默认的配置已经能满足大部分了，如果需要优化的话，可以参考<a href="https://theme-next.iissnan.com/theme-settings.html">NexT的主题设置</a>，优化自己想要的部分。<br>如果官方文档不能满足你，你还可以参考以下链接：<br><a href="https://chenjiabing666.github.io/2020/10/26/%E5%A5%B3%E6%9C%8B%E5%8F%8B%E7%9C%8B%E4%BA%86%E6%88%91%E7%9A%84%E5%8D%9A%E5%AE%A2%EF%BC%8C%E8%AF%B4%E5%A4%AALOW%E4%BA%86%EF%BC%8C%E4%BA%8E%E6%98%AF%E6%88%91%E6%8A%98%E8%85%BE%E4%BA%86%E4%B8%80%E5%A4%A9/">Hexo的Next主题优化教程</a><br><a href="https://lishibo-ios.github.io/2018/03/02/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%EF%BC%88%E4%BA%8C%EF%BC%89--%20%E4%BD%BF%E7%94%A8next%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE%E5%8D%9A%E5%AE%A2%E5%9F%BA%E6%9C%AC%E4%BF%A1%E6%81%AF/">博客搭建（二）– 使用next主题配置博客基本信息</a><br><a href="https://www.jianshu.com/p/f054333ac9e6">hexo的next主题个性化教程:打造炫酷网站</a><br>本人也不是做前端的，没办法写个性化的网站优化，都是google搜出来的，做个爱折腾的孩子吧，给爱折腾的孩子打call<br>本人比较喜欢简约风格，基本上没有改动，只对博客做了如下优化：</p>
<ul>
<li>增加评论系统</li>
<li>转载协议</li>
<li>添加分类、标签、关于页面</li>
<li>添加打赏按钮</li>
<li>…</li>
</ul>
<h2 id="5-给博客绑定自己的域名"><a href="#5-给博客绑定自己的域名" class="headerlink" title="5. 给博客绑定自己的域名"></a>5. 给博客绑定自己的域名</h2><p>本人本来就有一个域名闲置，所以就顺手使用了，如果没有域名的同学完全可以使用github的网址访问博客。<br>博客绑定域名教程参考：<br><a href="http://duansm.top/2018/08/07/hexo-dns/">Hexo+github搭建个人博客（四）：博客域名解析</a></p>
<h2 id="6-配置百度和谷歌收录博客"><a href="#6-配置百度和谷歌收录博客" class="headerlink" title="6. 配置百度和谷歌收录博客"></a>6. 配置百度和谷歌收录博客</h2><p>参考：<a href="http://duansm.top/2018/08/08/hexo-sitemap/">百度和谷歌收录博客</a></p>
<h2 id="7-写文章"><a href="#7-写文章" class="headerlink" title="7. 写文章"></a>7. 写文章</h2><h3 id="7-1-新建文章"><a href="#7-1-新建文章" class="headerlink" title="7.1 新建文章"></a>7.1 新建文章</h3><p>在blog根目录下，输入如下命令创建新的文章，</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">➜ hexo new &quot;pageName&quot;</span><br></pre></td></tr></table></figure>
<p>文章名最好是英文，因为文章的死链接路径中有它，带中文的话链接会变得很长。<br>执行完上述指令后，会在<code>source/_posts</code>目录下，生成<code>pageName.md文件</code>，编辑文件内容即可写文章</p>
<h3 id="7-2-文章相关格式"><a href="#7-2-文章相关格式" class="headerlink" title="7.2 文章相关格式"></a>7.2 文章相关格式</h3><h4 id="7-2-1-文章属性相关："><a href="#7-2-1-文章属性相关：" class="headerlink" title="7.2.1 文章属性相关："></a>7.2.1 文章属性相关：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: 个人博客搭建（Mac+Hexo+github）</span><br><span class="line">tags: </span><br><span class="line">- Hexo</span><br><span class="line">- github</span><br><span class="line">- mac</span><br><span class="line">categories: [个人博客搭建, Hexo]</span><br><span class="line">---</span><br></pre></td></tr></table></figure>
<p>每一项对应的含义：  </p>
<table>
<thead>
<tr>
<th>type</th>
<th>含义</th>
<th>备注</th>
</tr>
</thead>
<tbody><tr>
<td>title</td>
<td>文章标题</td>
<td></td>
</tr>
<tr>
<td>tags</td>
<td>文章标签</td>
<td>可用无序列表定义多个标签</td>
</tr>
<tr>
<td>date</td>
<td>文章创建时间</td>
<td>格式：2018-12-12 12:12:12</td>
</tr>
<tr>
<td>categories</td>
<td>文章分类</td>
<td>文章只属于一个分类，可定义子分类，使用[父分类,子分类]</td>
</tr>
</tbody></table>
<p>注意：每个选项冒号后面都必须空格，不然没法识别。</p>
<h4 id="7-2-2-文章摘要"><a href="#7-2-2-文章摘要" class="headerlink" title="7.2.2 文章摘要"></a>7.2.2 文章摘要</h4><p>在摘要结束的地方添加如下字符，即可生成摘要，建议手动设置，不推荐hexo的自动生成摘要的方式，因为无法保证摘要的完整性。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;!-- more --&gt;</span><br></pre></td></tr></table></figure>
<p>设置后的效果就是，首页文章只显示摘要，多了一个阅读全文的效果，如下：<br><img src="https://cdn.jsdelivr.net/gh/yishunjiande/PictureContainer@main/img/20210530161209.png" alt="摘要"></p>
<h4 id="7-2-3-文章内容"><a href="#7-2-3-文章内容" class="headerlink" title="7.2.3 文章内容"></a>7.2.3 文章内容</h4><p>个人使用markdown编辑器是MWeb和Typora，文章内容支持markdown编辑语法，markdown语法相关请参考：</p>
<ul>
<li><a href="https://www.jianshu.com/p/191d1e21f7ed">Markdown基本语法</a></li>
<li><a href="https://www.markdown.xyz/">Markdown 指南中文版</a></li>
</ul>
<h4 id="7-2-4-文章中的图片"><a href="#7-2-4-文章中的图片" class="headerlink" title="7.2.4 文章中的图片"></a>7.2.4 文章中的图片</h4><p>建议将图片上传至图床，图床的搭建请google搜索。<br>个人淌的坑有：</p>
<ul>
<li>gitee防盗链</li>
<li>七牛云必须有域名才可使用免费空间，大流量需收费</li>
<li>微博图床不可用</li>
<li>github墙内无法访问</li>
</ul>
<p>本人使用github+PicGo搭建，使用JSDelivr进行CDN加速，具体详细教程请参考：</p>
<ul>
<li><a href="https://learnku.com/articles/48574">如何使用 Github 作为自己的免费图床</a></li>
<li><a href="https://ji2xpro.github.io/73d224e9/">Hexo博客指南|第六篇:图床神器PicGo</a></li>
<li><a href="https://blog.csdn.net/qq_36759224/article/details/98058240">Github+jsDelivr+PicGo 打造稳定快速、高效免费图床</a></li>
</ul>
<h3 id="7-3-博客问题记录"><a href="#7-3-博客问题记录" class="headerlink" title="7.3 博客问题记录"></a>7.3 博客问题记录</h3><p>文章生成的目录无法跳转，点击报错，通过f12查看如下：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Cannot read property &#x27;top&#x27; of undefined</span><br></pre></td></tr></table></figure>
<p>查了很久，大家遇到的问题都不太一样，本人通过这篇博客解决了我的问题，附上链接：<br><a href="https://www.geek-share.com/detail/2819196740.html">如何解决next5主题目录无法跳转的问题</a></p>
<h2 id="8-总结"><a href="#8-总结" class="headerlink" title="8.总结"></a>8.总结</h2><p>上述内容可能存在实效性，如果有问题，欢迎提出，本人及时更新相关内容。</p>
]]></content>
      <categories>
        <category>个人博客搭建</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>github</tag>
        <tag>mac</tag>
      </tags>
  </entry>
  <entry>
    <title>详解Java字节码文件</title>
    <url>/2020/05/31/%E8%99%9A%E6%8B%9F%E6%9C%BA-Java%E5%AD%97%E8%8A%82%E7%A0%81%E6%96%87%E4%BB%B6/</url>
    <content><![CDATA[<p>引用两句话来说明字节码文件的重要性：</p>
<blockquote>
<p>代码编译的结果从本地机器码转变为字节码，是存储格式发展的一小步，却是编程语言发展的一大步。来自《深入理解Java虚拟机》-周志明  </p>
</blockquote>
<blockquote>
<p>理解字节码以及理解Java编译器如何生成Java字节码与学习汇编知识对于C/C++程序员有一样的意义。来自IBM developerWorks周刊</p>
</blockquote>
<p>本人在学习字节码文件后，明显能感觉到的几个好处：</p>
<ul>
<li>可以更好的理解Java语言特性</li>
<li>对以后学习Javassist、ASM等字节码操作工具有很大帮助</li>
<li>解三方库源码问题，能更好的定位、解决问题</li>
</ul>
<p>阅读本文，你将学会如何分析字节码内容。</p>
<span id="more"></span>
<h2 id="1-基础认识"><a href="#1-基础认识" class="headerlink" title="1. 基础认识"></a>1. 基础认识</h2><p>字节码技术是Java虚拟机实现<strong>平台无关性</strong>和<strong>语言无关性</strong>的关键。这句话有两层含义：</p>
<ul>
<li>java语言，“一处编译，处处运行”，说的就是Java虚拟机的平台无关性，Java虚拟机实现了不同平台的兼容，Java虚拟机只需加载符合《Java虚拟机规范》的字节码即可。</li>
<li>因为虚拟机只与字节码“打交道”，所以源码存在的形式不一定是Java语言，因此诞生了Groovy语言、JRuby语言等，它们通过编译器生成字节码，供Java虚拟机使用。</li>
</ul>
<p><img src="https://cdn.jsdelivr.net/gh/yishunjiande/PictureContainer@main/img/20210531233725.png" alt="语言无关性"></p>
<h2 id="2-字节码文件结构"><a href="#2-字节码文件结构" class="headerlink" title="2 字节码文件结构"></a>2 字节码文件结构</h2><p>首先我们来统一术语，通常说的“字节码文件”、“.class文件”、“class文件”都是指的字节码文件，本文将统一使用字节码文件描述。</p>
<p>注意：字节码不一定</p>
]]></content>
      <categories>
        <category>虚拟机</category>
        <category>字节码</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>虚拟机</tag>
        <tag>字节码</tag>
      </tags>
  </entry>
</search>
